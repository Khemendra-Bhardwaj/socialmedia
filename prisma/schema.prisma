// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  userid Int @id @default(autoincrement())
  name String
  email String @unique 
  posts Post[] // User would contain posts !
  followers UserFollow[]@relation("Followers") // Users have Followers 
  following UserFollow[] @relation("Following")  // Users Will Follow Other Users 
  like Like[]
  createdAt DateTime @default(now()) // User Creation time : on signup 
  updatedAt DateTime @updatedAt @default(now())// User modify its name or posts or  comments  
}

model Post{
  postid Int @id @default(autoincrement())
  title String 
  authorid Int
  author User @relation(fields: [authorid], references: [userid])
  comment Comment[]  // Post would contain Comments  
  like Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now()) 

}


model Comment{
  commentid Int @id @default(autoincrement())
  content String 
  parentPostid Int
  parentPost Post @relation(fields: [parentPostid], references: [postid]) 
  like Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now()) 
}


model UserFollow{
  id Int @id @default(autoincrement())
  followerId Int 
  followingId Int 
  follower User  @relation( "Followers", fields: [followerId], references: [userid])
  following User @relation("Following", fields: [followingId], references: [userid])
  @@unique([followerId,followingId])
}

model Like{
  id Int @id @default(autoincrement())
  userid Int?
  Author User? @relation(fields: [userid], references: [userid])

  postid Int?
  ParentPost  Post? @relation(fields: [postid], references: [postid])
  commentId Int?
  ParentComment Comment? @relation(fields: [commentId], references: [commentid])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now()) 
}


